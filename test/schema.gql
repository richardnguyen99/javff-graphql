# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type ActressImage {
  """Unique identifier for the actress image"""
  id: ID!

  """The URL of the actress image"""
  url: String!

  """The attribute or type of the image (e.g., large, small, fallback)"""
  attribute: String!
}

type Series {
  id: ID!
  name: String!
  videos: [Video!]
}

type Maker {
  id: ID!
  name: String!
  videos: [Video!]
}

type Video {
  id: ID!
  code: String!
  title: String!
  coverImage: String
  releaseDate: String
  actresses: [Actress!]
  series: Series
  maker: Maker
}

type Actress {
  """Unique identifier for the actress"""
  id: ID!

  """The actress's name"""
  name: String!

  """DMM ID (unique identifier, optional)"""
  dmmId: String

  """Display name (optional)"""
  displayName: String

  """Ruby (kana reading, optional)"""
  ruby: String

  """Bust size in cm (optional)"""
  bust: Float

  """Cup size (optional)"""
  cup: String

  """Waist size in cm (optional)"""
  waist: Float

  """Hip size in cm (optional)"""
  hip: Float

  """Height in cm (optional)"""
  height: Float

  """Birthday (ISO 8601 date, optional)"""
  birthday: DateTime

  """Blood type (optional)"""
  bloodType: String

  """Hobby (optional)"""
  hobby: String

  """Prefectures (optional)"""
  prefectures: String

  """List of actress images"""
  images: [ActressImage!]

  """List of videos featuring the actress"""
  videos: [Video!]
}

type PageInfo {
  """Indicates if there are more pages after this one"""
  hasNextPage: Boolean!

  """Indicates if there are pages before this one"""
  hasPreviousPage: Boolean!

  """Cursor of the first item in the current page"""
  startCursor: String

  """Cursor of the last item in the current page"""
  endCursor: String
}

type ActressEdge {
  """A cursor for use in pagination"""
  cursor: String!

  """The actress node"""
  node: Actress!
}

type ActressConnection {
  """A list of edges (actress nodes with cursors)"""
  edges: [ActressEdge!]!

  """Pagination information for this connection"""
  pageInfo: PageInfo!

  """Total number of actresses matching the filter"""
  totalCount: Int!
}

type ActressImageOutput {
  id: Int!
  url: String!
  attribute: String!
}

type UpdateActressOutput {
  """Unique identifier for the actress"""
  id: ID

  """The actress's name"""
  name: String

  """DMM ID (unique identifier, optional)"""
  dmmId: String

  """Display name (optional)"""
  displayName: String

  """Ruby (kana reading, optional)"""
  ruby: String

  """Bust size in cm (optional)"""
  bust: Float

  """Cup size (optional)"""
  cup: String

  """Waist size in cm (optional)"""
  waist: Float

  """Hip size in cm (optional)"""
  hip: Float

  """Height in cm (optional)"""
  height: Float

  """Birthday (ISO 8601 date, optional)"""
  birthday: DateTime

  """Blood type (optional)"""
  bloodType: String

  """Hobby (optional)"""
  hobby: String

  """Prefectures (optional)"""
  prefectures: String
}

"""DateTime custom scalar type to work with ISO 8601 date strings"""
scalar DateTime

type Query {
  """
  Get a paginated list of actresses with optional filters and Relay-style pagination.
  """
  actresses(options: ActressQueryOptionsInput): ActressConnection!

  """Get a single actress by her numeric ID."""
  actress(id: Int!): Actress

  """Search for actresses by name (partial match)."""
  searchActressesByName(name: String!): [Actress!]!

  """Get a single actress by her DMM ID."""
  actressByDmmId(dmmId: String!): Actress
}

input ActressQueryOptionsInput {
  """Filter by cup size (e.g., 'C', 'D')"""
  cup: String

  """Filter by minimum bust size (cm)"""
  bust: Float

  """Filter by minimum waist size (cm)"""
  waist: Float

  """Filter by minimum hip size (cm)"""
  hip: Float

  """Filter by minimum height size (cm)"""
  height: Float

  """Filter by birth year or earlier (e.g., 1990)"""
  year: Int

  """Cursor for forward pagination"""
  after: String

  """Cursor for backward pagination"""
  before: String

  """Number of records to fetch forward"""
  first: Int

  """Number of records to fetch backward"""
  last: Int

  """
  Sort by field ('cup', 'bust', 'waist', 'hip', 'height', or 'birthday' supported)
  """
  sortBy: String

  """Sort order: ASC (default) or DESC"""
  sortOrder: ActressSortOrder
}

"""Sort order: ASC for ascending, DESC for descending"""
enum ActressSortOrder {
  ASC
  DESC
}

type Mutation {
  """Create a new actress record."""
  createActress(input: CreateActressInput!): Actress!

  """Update an existing actress record by ID."""
  updateActress(id: Int!, input: UpdateActressInput!): UpdateActressOutput!

  """Add an image to an actress."""
  addActressImage(input: AddActressImageInput!): ActressImageOutput!

  """Update an image of an actress. Image id is required."""
  updateActressImage(input: UpdateActressImageInput!): ActressImageOutput!

  """Remove an image from an actress. Image id is required."""
  removeActressImage(input: RemoveActressImageInput!): Boolean!

  """Delete an actress record by ID."""
  deleteActress(id: Int!): Boolean!
}

input CreateActressInput {
  """The actress's name (required, non-blank)"""
  name: String!

  """DMM ID (unique identifier, optional)"""
  dmmId: String

  """Display name (optional, non-blank)"""
  displayName: String

  """Ruby (kana reading, optional, non-blank)"""
  ruby: String

  """Bust size in cm (optional, min 1, max 2 decimal places)"""
  bust: Float

  """Cup size (optional, non-blank)"""
  cup: String

  """Waist size in cm (optional, min 1, max 2 decimal places)"""
  waist: Float

  """Hip size in cm (optional, min 0, max 2 decimal places)"""
  hip: Float

  """Height in cm (optional, min 0, max 2 decimal places)"""
  height: Float

  """Birthday (ISO 8601 format, optional)"""
  birthday: String

  """Blood type (optional, non-blank)"""
  bloodType: String

  """Hobby (optional, non-blank)"""
  hobby: String

  """Prefectures (optional, non-blank)"""
  prefectures: String

  """List of actress images (optional)"""
  images: [CreateActressImageInput!]
}

input CreateActressImageInput {
  """The URL of the actress image"""
  url: String!

  """The attribute or type of the image (e.g., profile, cover)"""
  attribute: String!
}

input UpdateActressInput {
  """The actress's name (optional, non-blank)"""
  name: String

  """DMM ID (unique identifier, optional)"""
  dmmId: String

  """Display name (optional, non-blank)"""
  displayName: String

  """Ruby (kana reading, optional, non-blank)"""
  ruby: String

  """Bust size in cm (optional, min 1, max 2 decimal places)"""
  bust: Float

  """Cup size (optional, non-blank)"""
  cup: String

  """Waist size in cm (optional, min 1, max 2 decimal places)"""
  waist: Float

  """Hip size in cm (optional, min 0, max 2 decimal places)"""
  hip: Float

  """Height in cm (optional, min 0, max 2 decimal places)"""
  height: Float

  """Birthday (ISO 8601 format, optional)"""
  birthday: String

  """Blood type (optional, non-blank)"""
  bloodType: String

  """Hobby (optional, non-blank)"""
  hobby: String

  """Prefectures (optional, non-blank)"""
  prefectures: String

  """List of actress images (optional)"""
  images: [CreateActressImageInput!]
}

input AddActressImageInput {
  """ID of the actress"""
  actressId: ID!

  """The URL of the actress image"""
  url: String!

  """The attribute or type of the image (e.g., profile, cover)"""
  attribute: String!
}

input UpdateActressImageInput {
  """ID of the actress"""
  actressId: ID!

  """ID of the image"""
  id: ID!

  """The URL of the actress image"""
  url: String

  """The attribute or type of the image (e.g., profile, cover)"""
  attribute: String
}

input RemoveActressImageInput {
  """ID of the actress"""
  actressId: ID!

  """ID of the image"""
  id: ID!
}